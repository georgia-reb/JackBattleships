function Ship.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 4
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop this 3
label IF_FALSE0
push this 0
push constant 1
eq
push this 0
push constant 2
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
pop this 3
label IF_FALSE1
push this 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
pop this 3
label IF_FALSE2
push this 0
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 5
pop this 3
label IF_FALSE3
push pointer 0
return
function Ship.getCoords 1
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 0
push constant 0
push local 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
push local 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push this 2
push this 3
add
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push constant 2
push local 0
add
push this 1
push this 3
add
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 0
return
function Ship.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
